apply plugin: 'maven-publish'
apply plugin: 'signing'

task androidSourcesJar(type: Jar) {
    archiveClassifier.set('sources')
    if (project.plugins.findPlugin("com.android.library")) {
        from android.sourceSets.main.java.srcDirs
    } else {
        from sourceSets.main.java.srcDirs
    }
}

artifacts {
    archives androidSourcesJar
}


group = project.POM_GROUP_ID
version = System.getProperty("versionName", project.VERSION_NAME + "-SNAPSHOT")

ext["signing.keyId"] = ''
ext["signing.password"] = ''
ext["signing.secretKeyRingFile"] = ''
ext["ossrhUsername"] = ''
ext["ossrhPassword"] = ''
ext["sonatypeStagingProfileId"] = ''

File secretPropsFile = project.rootProject.file('local.properties')
if (secretPropsFile.exists()) {
    Properties p = new Properties()
    p.load(new FileInputStream(secretPropsFile))
    p.each { name, value ->
        ext[name] = value
    }
} else {
    ext["signing.keyId"] = System.getenv('GPG_SIGNING_KEY_ID')
    ext["signing.password"] = System.getenv('GPG_SIGNING_PASSWORD')
    ext["signing.secretKeyRingFile"] = System.getenv('SIGNING_SECRET_KEY_RING_FILE')
    ext["ossrhUsername"] = System.getenv('OSSRH_USERNAME')
    ext["ossrhPassword"] = System.getenv('OSSRH_PASSWORD')
    ext["sonatypeStagingProfileId"] = System.getenv('SONATYPE_STAGING_PROFILE_ID')
}

publishing {
    publications {
        release(MavenPublication) {
            groupId project.POM_GROUP_ID
            artifactId project.POM_ARTIFACT_ID
            version System.getProperty("versionName", project.VERSION_NAME + "-SNAPSHOT")

            if (project.plugins.findPlugin("com.android.library")) {
                artifact("$buildDir/outputs/aar/${project.getName()}-release.aar")
            } else {
                artifact("$buildDir/libs/${project.getName()}-${version}.jar")
            }

            artifact androidSourcesJar

            pom {
                name = project.POM_ARTIFACT_ID
                description = 'Fluent System Icons are a collection of familiar, friendly and modern icons from Microsoft.'
                url = 'https://github.com/microsoft/fluentui-system-icons'
                licenses {
                    license {
                        name = 'MIT License'
                        url = 'https://github.com/microsoft/fluentui-system-icons/blob/master/LICENSE'
                    }
                }
                developers {
                    developer {
                        id = 'fluent-ui-android'
                        name = 'Microsoft Inc.'
                        email = 'fluentuinativeowners@microsoft.com'
                    }
                }
                scm {
                    connection = 'scm:git:github.com/microsoft/fluentui-system-icons.git'
                    developerConnection = 'scm:git:ssh://github.com/microsoft/fluentui-system-icons.git'
                    url = 'https://github.com/microsoft/fluentui-system-icons/tree/main'
                }
                withXml {
                    def dependenciesNode = asNode().appendNode('dependencies')

                    project.configurations.implementation.allDependencies.each {
                        def dependencyNode = dependenciesNode.appendNode('dependency')
                        dependencyNode.appendNode('groupId', it.group)
                        dependencyNode.appendNode('artifactId', it.name)
                        dependencyNode.appendNode('version', it.version)
                    }
                }
            }
        }
    }
    repositories {
        maven {
            name = "sonatype"
            url = "https://oss.sonatype.org/service/local/staging/deploy/maven2/"

            credentials {
                username ossrhUsername
                password ossrhPassword
            }
        }
    }
}

nexusStaging {
    packageGroup = project.POM_GROUP_ID
    stagingProfileId = sonatypeStagingProfileId
    username = ossrhUsername
    password = ossrhPassword
}

signing {
    sign publishing.publications
}
