{
  "name": "@fluentui/system-icons-processing",
  "private": true,
  "version": "1.0.0",
  "description": "",
  "main": "index.js",
  "scripts": {
    "jshint": "jshint --reporter=node_modules/jshint-stylish src || true",
    "clean": "find dist -type f ! -name '.keep' -delete && rm -rf dist/*",
    "generate:svg": "node generate.js --source=../assets --dest=./dist --extension=svg",
    "generate:svg-android": "node generate.js --source=../assets --dest=./dist --extension=svg --selector",
    "generate:react": "node generate.js --source=../assets --dest=./dist --extension=svg --target=react",
    "generate:pdf": "node generate.js --source=../assets --dest=./dist --extension=pdf",
    "build:android": "npm run create:android && npm run optimize:android && npm run finalize:android",
    "finalize:android": "replace '#212121' '@color/fluent_default_icon_tint' ./dist --exclude=\"*.selector\" --recursive --quiet && replace '\"http://schemas.android.com/apk/res/android\"' '\"http://schemas.android.com/apk/res/android\" android:autoMirrored=\"true\"' $(awk '$0=\"./dist/\"$0\".xml\"' rtl.txt)",
    "create:android": "npm run generate:svg-android && find ./dist/ -type d -exec sh -c 'tools/vd-tool/bin/vd-tool -c -in {} -out {}' \\;",
    "optimize:android": "find ./dist/ -type f -name '*.svg' -delete && find ./dist/ -type d ! -name '*_selector.xml' -exec sh -c 'avocado -q {}' \\;",
    "build:react": "npm run generate:react",
    "deploy:android": "npm run build:android && rm -rf ../android/library/src/main/res/drawable && mkdir ../android/library/src/main/res/drawable && find ./dist/ -type f -name \"*.xml\" -maxdepth 1 -exec cp {} ../android/library/src/main/res/drawable \\; && npm run clean",
    "deploy:react": "npm run build:react && rm -rf ../react/src/components && mkdir ../react/src/components && find ./dist/ -type f -name \"*.tsx\" -exec cp {} ../react/src/components \\; && npm run clean",
    "deploy:ios": "python3 process_ios_assets.py",
    "generate:font-regular": "node generateFont.js --source=dist --dest=dist/fonts --iconType=Regular --codepoints=../fonts/FluentSystemIcons-Regular.json",
    "generate:font-filled": "node generateFont.js --source=dist --dest=dist/fonts --iconType=Filled --codepoints=../fonts/FluentSystemIcons-Filled.json",
    "generate:font-resizable": "node generateFont.js --source=dist --dest=dist/fonts --iconType=Resizable",
    "build:fonts": "npm run generate:svg && find ./dist -type f -name '*.svg' -exec svgo --config svgo_config.yml {} + && mkdir dist/fonts && npm run generate:font-regular && npm run generate:font-filled && npm run generate:font-resizable && replace '\\\\\\\\' '0x' dist/fonts/*.json",
    "deploy:fonts": "npm run build:fonts && cp -a dist/fonts/* ../fonts && npm run clean",
    "generate:flutter-icon-lib-class": "node generate_flutter_lib_class.js --source=../fonts/FluentSystemIcons-Regular.json ../fonts/FluentSystemIcons-Filled.json --dest=dist/flutter",
    "generate:flutter-icon-demo-class": "node generate_flutter_demo_class.js --source=../fonts/FluentSystemIcons-Regular.json ../fonts/FluentSystemIcons-Filled.json --dest=dist/flutter",
    "build:flutter": "npm run deploy:fonts && mkdir dist/flutter && npm run generate:flutter-icon-lib-class && npm run generate:flutter-icon-demo-class",
    "deploy:flutter": "npm run build:flutter && cp ../fonts/*.ttf ../flutter/lib/fonts && cp dist/flutter/fluent_icons.dart ../flutter/lib/src/fluent_icons.dart && cp dist/flutter/sample_icons.dart ../flutter/example/lib/sample_icons.dart && npm run clean"
  },
  "author": "Microsoft Inc.",
  "license": "Microsoft",
  "devDependencies": {
    "avocado": "1.0.0",
    "fantasticon": "^1.2.3",
    "glob": "^8.0.1",
    "lodash": "4.17.21",
    "mkdirp": "^1.0.4",
    "react": "~17.0.1",
    "replace": "^1.2.0",
    "shx": "^0.3.2",
    "svgo": "1.3.2",
    "xmldom": ">=0.5.0",
    "yargs": "^14.2.3"
  }
}
