name: Pull request validation

on: pull_request

jobs:
  valid-asset-names:
    name: Validate Asset Names
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2

    - name: Check asset directories are valid for Windows
      run: |
        ls assets | python3 -c """
        import sys
        assets_dir = sys.stdin.read().strip().split('\n')
        invalid_asset_dirs = []
        for dir in assets_dir:
          if dir.endswith(' '):
            invalid_asset_dirs.append(dir)

        if invalid_asset_dirs:
          print('Invalid asset directories, remove the trailing space')
          print(invalid_asset_dirs)
          exit(1)
        """
  valid-asset-fills:
    name: Validate Asset Fills
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2

    - name: Check that all SVGs have the right fill
      run: |
        error_found=false
        
        for file in $(find ./assets -type f -name "*.svg" -exec grep -L 'fill="#212121"' {} \;); do
          echo "Error: $file does not have 'fill=\"#212121\"' or has a different fill."
          error_found=true
        done
        
        if [[ $error_found == true ]]; then
          exit 1
        fi

  build-ios:
    name: Build iOS library
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2

    - name: Use Node 18
      uses: actions/setup-node@v1
      with:
        node-version: 18.x

    - run: npm install

    - name: Run generate script
      run: npm run deploy:ios
      working-directory: importer

  # build-android:
    # name: Build Android library
    # runs-on: ubuntu-latest

    # steps:
    # - uses: actions/checkout@v2

    # - name: Use Node 18
    #   uses: actions/setup-node@v1
    #   with:
    #     node-version: 18.x

    # - run: npm install

    # - name: Run generate script
    #   run: npm run deploy:android
    #   working-directory: importer

    # - name: Setup Java
    #   uses: actions/setup-java@v1
    #   with:
    #     java-version: 11

    # # https://github.com/marketplace/actions/gradle-command
    # - name: Build Android library
    #   uses: eskatos/gradle-command-action@v1
    #   with:
    #     arguments: assembleRelease
    #     build-root-directory: android
    #     wrapper-directory: android

    # - name: Generate BUILD.gn file for Android
    #   run: python3 generate_build_gn_android.py
    #   working-directory: importer

  build-flutter:
    name: Build Flutter library
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2

    - name: Use Node 18
      uses: actions/setup-node@v1
      with:
        node-version: 18.x

    - run: npm install

    - name: Run generate script
      run: npm run deploy:flutter
      working-directory: importer

    # Build Flutter library
    # The name should be same as the package name on pub.dev
    # Tokens are placeholder strings in order for the action to run on forked repos.
    - name: 'fluentui_system_icons'
      uses: k-paxian/dart-package-publisher@master
      with:
        relativePath: 'flutter'
        skipTests: true
        dryRunOnly: true
        accessToken: "placeholder"
        refreshToken: "placeholder"

  build-svg:
    name: Build svg library
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2

    - name: Use Node 18
      uses: actions/setup-node@v1
      with:
        node-version: 18.x

    - run: npm install

    - name: Run build
      run: npm run build
      working-directory: packages/svg-icons

  build-react:
    name: Build react library
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2

    - name: Use Node 18
      uses: actions/setup-node@v1
      with:
        node-version: 18.x

    - run: npm install

    - run: |
        npm run build
      working-directory: packages/react-icons

    - run: |
        npm run build
      working-directory: packages/react-icons-font-subsetting-webpack-plugin

    - run: |
        npm run test
      working-directory: packages/react-icons-font-subsetting-webpack-plugin
