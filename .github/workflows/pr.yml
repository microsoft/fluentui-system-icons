name: Pull request validation

on: pull_request

jobs:
  valid-asset-names:
    name: Validate Asset Names
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4

    - name: Check asset directories are valid for Windows
      run: |
        ls assets | python3 -c """
        import sys
        assets_dir = sys.stdin.read().strip().split('\n')
        invalid_asset_dirs = []
        for dir in assets_dir:
          if dir.endswith(' '):
            invalid_asset_dirs.append(dir)

        if invalid_asset_dirs:
          print('Invalid asset directories, remove the trailing space')
          print(invalid_asset_dirs)
          exit(1)
        """
  valid-asset-fills:
    name: Validate Asset Fills
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4

    - name: Check that all SVGs have the right fill
      run: |
        error_found=false

        for file in $(find ./assets -type f -name "*.svg" -print0 | grep -zv '_color.svg' | xargs -0 grep -L 'fill="#212121"'); do
          echo "Error: $file does not have 'fill=\"#212121\"' or has a different fill."
          error_found=true
        done

        if [[ $error_found == true ]]; then
          exit 1
        fi

  build-ios:
    name: Build iOS library
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4

    - uses: actions/setup-node@v4
      with:
        node-version: 20.x

    - run: npm ci

    - name: Run generate script
      run: npm run deploy:ios
      working-directory: importer

  build-android:
    name: Build Android library
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4

    - uses: actions/setup-node@v4
      with:
        node-version: 20.x

    - run: npm ci

    - name: Run generate script
      run: npm run deploy:android
      working-directory: importer

    - name: Setup Java
      uses: actions/setup-java@v1
      with:
        java-version: 11

    # https://github.com/marketplace/actions/gradle-command
    - name: Build Android library
      uses: eskatos/gradle-command-action@v1
      with:
        arguments: assembleRelease
        build-root-directory: android
        wrapper-directory: android

    - name: Generate BUILD.gn file for Android
      run: python3 generate_build_gn_android.py
      working-directory: importer

  # Disabling for now until the pipeline job is fixed
  # build-flutter:
  #   name: Build Flutter library
  #   runs-on: ubuntu-latest

  #   steps:
  #   - uses: actions/checkout@v2

  #   - uses: actions/setup-node@v1
  #     with:
  #       node-version: 20.x

  #   - run: npm ci

  #   - name: Run generate script
  #     run: npm run deploy:flutter
  #     working-directory: importer

  #   # Build Flutter library
  #   # The name should be same as the package name on pub.dev
  #   # Tokens are placeholder strings in order for the action to run on forked repos.
  #   - name: 'fluentui_system_icons'
  #     uses: k-paxian/dart-package-publisher@master
  #     with:
  #       relativePath: 'flutter'
  #       skipTests: true
  #       dryRunOnly: true
  #       accessToken: "placeholder"
  #       refreshToken: "placeholder"

  build-svg:
    name: Build svg library
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4

    - uses: actions/setup-node@v4
      with:
        node-version: 20.x

    - run: npm ci

    - name: Run build
      run: npm run build
      working-directory: packages/svg-icons

  build-react:
    name: Build react library
    runs-on: ubuntu-latest

    steps:
    - name: Generate a token
      id: generate-token
      uses: actions/create-github-app-token@v1
      with:
        app-id: ${{ secrets.GH_FLUENT_CI_APP_ID }}
        private-key: ${{ secrets.GH_FLUENT_CI_PRIVATE_KEY }}

    - uses: actions/checkout@v4
      with:
        token: ${{ steps.generate-token.outputs.token }}

    - uses: actions/setup-node@v4
      with:
        node-version: 20.x

    - run: npm ci

    - name: Lint & Build @fluentui/react-icons
      run: |
        time npm run lint
        time npm run build
      working-directory: packages/react-icons

    - name: Commit metadata.json if changed @fluentui/react-icons
      working-directory: packages/react-icons
      run: |
        git config user.email "flubuild@microsoft.com" && git config user.name "Fluent Build System"
        if [[ -n "$(git status --porcelain metadata.json)" ]]; then
          git add metadata.json
          git commit -m "chore(react-icons): update metadata.json [skip ci]"
          git push origin HEAD:${{ github.head_ref }}
        fi

    - name: Test (verify build) @fluentui/react-icons
      run: |
        npm run build:verify -- -u
      working-directory: packages/react-icons

    - name: Build @fluentui/react-native-icons
      run: |
        npm run build
      working-directory: packages/react-native-icons

    - name: Build @fluentui/react-icons-font-subsetting-webpack-plugin
      run: |
        npm run build
      working-directory: packages/react-icons-font-subsetting-webpack-plugin

    - name: Test @fluentui/react-icons-font-subsetting-webpack-plugin
      run: |
        npm run test
      working-directory: packages/react-icons-font-subsetting-webpack-plugin

    - name: React Icons App - Deploy
      run: |
        time npm run build
      working-directory: packages/icon-app

    - name: Upload build artifacts
      uses: actions/upload-artifact@v4
      with:
        name: icon-app-build
        path: packages/icon-app/dist/
        retention-days: 7
